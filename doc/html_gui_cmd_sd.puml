@startuml
hide footbox

box "Browser or WebView GUI" #LightBlue
  participant "GUI in HTML/JavaScript" as gui
  participant Servalot
end box

box "Servalot back-end" #FAA
  participant WebViewHelper
  participant WsServer
  participant "JSON Command Handler" as handler
end box

opt Android Webview
  WebViewHelper -> WebViewHelper: wv.addJavascriptInterface(,"wvi")
  note left: If "wvi" object exists in Javascript\nGUI knows it's in\nAndroid Webview context.
end

gui -> Servalot: command(obj, callback)
Servalot -> Servalot: JSON.stringify(obj)

alt Android WebView
  Servalot -> WebViewHelper: wvi.command(json)
  WebViewHelper -> WebViewHelper: obj = new JSONObject(json);
  WebViewHelper -> handler: command(obj,crl)
  handler -> WebViewHelper: crl.sendResponse(obj)
  WebViewHelper -> WebViewHelper: json = obj.toString();
  WebViewHelper -> Servalot: wvi.response(json)
else Browser and WebSocket server
  Servalot -> Servalot: create XHR
  Servalot -> WsServer : MESSAGE json
  WsServer -> WsServer: obj = new JSONObject(json);
  WsServer -> handler: command(obj, crl)
  handler -> WsServer: crl.response(obj)
  WsServer -> WsServer: json = obj.toString();
  WsServer -> Servalot: MESSAGE json
end

Servalot -> Servalot: JSON.parse(json)
Servalot -> gui: callback(obj)
@enduml
